version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: studynotion-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-password123}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-init:/docker-entrypoint-initdb.d
    networks:
      - studynotion-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: microservices/api-gateway/Dockerfile
    container_name: studynotion-api-gateway
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - AUTH_SERVICE_URL=http://auth-service:3001
      - COURSE_SERVICE_URL=http://course-service:3003
      - PROFILE_SERVICE_URL=http://profile-service:3004
      - RATING_SERVICE_URL=http://rating-service:3005
      - MEDIA_SERVICE_URL=http://media-service:3006
      - NOTIFICATION_SERVICE_URL=http://notification-service:3007
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - studynotion-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Auth Service
  auth-service:
    build:
      context: .
      dockerfile: microservices/auth-service/Dockerfile
    container_name: studynotion-auth-service
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - MONGODB_URL=mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-password123}@mongodb:27017/studynotion-auth?authSource=admin
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-here}
      - JWT_EXPIRE=7d
      - COOKIE_EXPIRE=7
      - MAIL_HOST=${MAIL_HOST:-smtp.gmail.com}
      - MAIL_PORT=587
      - MAIL_USER=${MAIL_USER:-your-email@gmail.com}
      - MAIL_PASS=${MAIL_PASS:-your-app-password}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - studynotion-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Course Service
  course-service:
    build:
      context: .
      dockerfile: microservices/course-service/Dockerfile
    container_name: studynotion-course-service
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - PORT=3003
      - MONGODB_URL=mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-password123}@mongodb:27017/studynotion-course?authSource=admin
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME:-your-cloud-name}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY:-your-api-key}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET:-your-api-secret}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-here}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - studynotion-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Profile Service
  profile-service:
    build:
      context: .
      dockerfile: microservices/profile-service/Dockerfile
    container_name: studynotion-profile-service
    restart: unless-stopped
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=production
      - PORT=3004
      - MONGODB_URL=mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-password123}@mongodb:27017/studynotion-profile?authSource=admin
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME:-your-cloud-name}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY:-your-api-key}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET:-your-api-secret}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-here}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - studynotion-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Rating Service
  rating-service:
    build:
      context: .
      dockerfile: microservices/rating-service/Dockerfile
    container_name: studynotion-rating-service
    restart: unless-stopped
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=production
      - PORT=3005
      - MONGODB_URL=mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-password123}@mongodb:27017/studynotion-rating?authSource=admin
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-here}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - studynotion-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Media Service
  media-service:
    build:
      context: .
      dockerfile: microservices/media-service/Dockerfile
    container_name: studynotion-media-service
    restart: unless-stopped
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=production
      - PORT=3006
      - MONGODB_URL=mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-password123}@mongodb:27017/studynotion-media?authSource=admin
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME:-your-cloud-name}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY:-your-api-key}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET:-your-api-secret}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-here}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - studynotion-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3006/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Notification Service
  notification-service:
    build:
      context: .
      dockerfile: microservices/notification-service/Dockerfile
    container_name: studynotion-notification-service
    restart: unless-stopped
    ports:
      - "3007:3007"
    environment:
      - NODE_ENV=production
      - PORT=3007
      - MONGODB_URL=mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-password123}@mongodb:27017/studynotion-notification?authSource=admin
      - MAIL_HOST=${MAIL_HOST:-smtp.gmail.com}
      - MAIL_PORT=587
      - MAIL_USER=${MAIL_USER:-your-email@gmail.com}
      - MAIL_PASS=${MAIL_PASS:-your-app-password}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-here}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - studynotion-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3007/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: frontend-microservice/Dockerfile
    container_name: studynotion-frontend
    restart: unless-stopped
    ports:
      - "3008:3008"
    environment:
      - NODE_ENV=production
    depends_on:
      - api-gateway
    networks:
      - studynotion-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3008/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mongodb_data:
    driver: local

networks:
  studynotion-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
