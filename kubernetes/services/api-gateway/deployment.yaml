# API Gateway Deployment
# Central entry point for all microservices
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: default
  labels:
    app: studynotion
    component: api-gateway
spec:
  replicas: 2
  selector:
        matchLabels:
      app: studynotion
      component: api-gateway
  template:
    metadata:
      labels:
        app: studynotion
        component: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: studynotion/api-gateway:latest
        ports:
        - containerPort: 4000
          name: http
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: studynotion-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: studynotion-config
              key: API_GATEWAY_PORT
        - name: AUTH_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: studynotion-config
              key: AUTH_SERVICE_URL
        - name: PAYMENT_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: studynotion-config
              key: PAYMENT_SERVICE_URL
        - name: COURSE_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: studynotion-config
              key: COURSE_SERVICE_URL
        - name: PROFILE_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: studynotion-config
              key: PROFILE_SERVICE_URL
        - name: RATING_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: studynotion-config
              key: RATING_SERVICE_URL
        - name: MEDIA_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: studynotion-config
              key: MEDIA_SERVICE_URL
        - name: NOTIFICATION_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: studynotion-config
              key: NOTIFICATION_SERVICE_URL
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 4000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 4000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      restartPolicy: Always
